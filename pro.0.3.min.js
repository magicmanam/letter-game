var pro = proFn(document);
function proFn(e) {
    (function (a) {
        if (a.on || a["in"] || a.out || a.toClass || a.outClass || a.no || a.is || a.proClass || a.proTag || a.proId) throw Error('Pro JS can not extend HTMLElement to be sweet and dirty! Please pass "withoutDirty" argument "true" in "pro(document, window, withoutDirty)" function in order to start with ProJS.'); a.to = function (a, b) { this.setAttribute(a, b || ""); return this }; a.on = function (a, b, c) { this.addEventListener(a, b, c); return this }; a.no = function (a, b, c) { this.removeEventListener(a, b, c); return this };
        a.out = function (a) { this.removeAttribute(a); return this }; a.toClass = function (a) { this.classList.add(a); return this }; a.outClass = function (a) { this.classList.remove(a); return this }; a.is = function (a) { return this.hasAttribute(a) }; a.proTag = function (a) { return this.getElementsByTagName(a) }; a.proClass = function (a) { return this.getElementsByClassName(a) }; a.proSelector = function (a) { return this.querySelector(a) }; a.proId = function (a) { return this.proSelector("#" + a) }; a.toChildFree = function () { for (; this.firstChild;)this.removeChild(this.firstChild) }
    })(HTMLElement.prototype);
    HTMLDocument.prototype.on = function (a, f, b) { this.addEventListener(a, f, b); return this }; HTMLDocument.prototype.no = function (a, f, b) { this.removeEventListener(a, f, b); return this }; Array.prototype.remove = function (a) { for (var f = 0; f < this.length; f++)this[f] === a && this.splice(f, 1) }; Array.prototype.clone = function () { return this.slice(0) }; return {
        JSON: function (a) { return function (f) { return a(JSON.parse(f)) } }, safe: function (a) { return a || function () { } }, element: function (a) { return e.createElement(a) }, selector: function (a) { return e.querySelector(a) },
        "class": function (a) { return e.getElementsByClassName(a) }, tag: function (a) { return e.getElementsByTagName(a) }, id: function (a) { return e.getElementById(a) }
    }
}
(function (e) {
    function a() { this.actionsMap = {} } function f(a, d) { if (0 === ((b.getEventData("error") || {}).listeners || []).length) throw a; b.error({ error: a, core: d }) } var b = new a; a.error = function (a, d) { d || (d = a, a = null); b.on("error", function (c) { a && a !== c.core || d(c) }) }; a.prototype.getEventData = function (a) { return this.actionsMap[a] }; a.prototype.setEventData = function (a, d) { this.actionsMap[a] = d }; a.prototype.on = function (a, d, b) {
        var c = this.getEventData(a); if (c) {
            if (c.listeners.push(d), c.containsEventValue && !b) try { d(c.lastEventValue) } catch (k) {
                f(k,
                    this)
            }
        } else this.setEventData(a, { listeners: [d] }), this[a] = function (d, b) { return this.out(a, d, b) }; return this
    }; a.prototype.no = function (a, d) { var b = this.getEventData(a); b && b.listeners.remove(d); return this }; a.prototype.once = function (a, b, f) { function d() { c.no(a, d); b.apply(c, arguments) } var c = this; this.on(a, d, f); return this }; a.prototype.out = function (a, b, e) {
        var d = this, c = d.getEventData(a); c ? (c.listeners.clone().forEach(function (a) { try { a(b, e) } catch (g) { f(g, d) } }), c.lastEventValue = b, c.containsEventValue = !0) : d.setEventData(a,
            { lastEventValue: b, listeners: [], containsEventValue: !0 }); return d
    }; e.core = a
})(pro);
(function (e) {
    function a() { e.core.apply(this, arguments); this.states = {} } a.prototype = Object.create(e.core.prototype); a.prototype.constructor = a; a.prototype.state = function (a) { if (this.states[a]) throw Error("State " + a + " is already defined."); this.states[a] = { to: function (a) { this.onTo = a; return this }, out: function (a) { this.onOut = a }, onTo: function () { }, onOut: function () { } }; return this.states[a] }; a.prototype.to = function (a, b, c) {
        for (var d = this.currentState ? this.currentState.split(".") : [], f = a.split("."), e = ""; 0 !== d.length *
            f.length && d[0] === f[0];)e += d[0] + ".", d.shift(), f.shift(); for (; 0 < d.length;)this.states[e + d.join(".")].onOut(), d.pop(); for (; 0 < f.length;)this.states[e + f[0]].onTo(b, c), e += f[0] + ".", f.shift(); this.currentState = a; this.out(a, b); return this
    }; a.prototype.is = function (a) { return a === this.currentState }; a.prototype.unit = function (f) {
        function b(b) { c = new a; b.apply(c, e); d.out(f, c); window.units = window.units || []; window.units.push(f) } var c = { name: f }, d = this, e = []; window.unitss = window.unitss || []; window.unitss.push(f); c.on = function () {
            var a =
                arguments; c.on = void 0; c.out = void 0; return { out: function (c) { var f = a.length, g = 0; if (0 < f) for (e = Array(a.length); g < a.length; g++)d.once(a[g], function (a) { return function (d) { e[a] = d; 0 === --f && b(c) } }(g)) } }
        }; c.out = b; return c
    }; e.Unit = a
})(pro);
(function (e) {
    var a = new e.core, f = 0; a.to = function (b) {
        var c = new XMLHttpRequest, d = new e.core, h = !1, l = [], k, m; c.onreadystatechange = function () { if (4 === this.readyState) { k = this.status; m = this.responseText; a.out("pending", --f); var c = { data: m, status: k, url: b }; d.out(k, c); a.out(k, m); var e = 300 > k ? "success" : 399 < k ? "fail" : "redirect"; d.out(e, c); a.out(e, c); d.out("end", c); a.out("end", c) } }; var g = {
            on: function (a, b) { if (a) d.on(a, b); return g }, sync: function (a) { h = !!a; return g }, header: function (a, b) { l.push({ h: a, v: b }); return g }, outJSON: function (a,
                b) { g.header("Content-Type", "application/json"); return g.out(a, b) }, out: function (d, e) { a.out("open", g); c.open(d, b, !h); l.forEach(function (a) { c.setRequestHeader(a.h, a.v) }); c.send("object" === typeof e ? JSON.stringify(e) : e); a.out("pending", ++f); a.out("send", g); return g }, get: function () { return g.out("get") }, post: function (a) { return g.out("post", a) }, put: function (a) { return g.out("put", a) }, "delete": function (a) { return g.out("delete", a) }
        }; return g
    }; a.on("fail", function (b) { if (!a.suppressErrors) throw b; }); e.http = a
})(pro);
(function (e) { function a() { function a(d) { for (var c = 0; c < d.length;) { var e = d[c++]; b.node(e); a(e.children) } } var b = new e.core, c = 0; b.on("depth", function (d) { a(d); if (0 === c) b.out("end"); else b.on("pending", function (a) { 0 === a && b.out("end") }) }); b.on("pending", function (a) { c += a }); return b } e.tree = a(); e.tree["new"] = a; e.tree.on("document", function () { e.tree.depth(document.children) }) })(pro);
(function (e) { function a(b) { b.on("node", function (c) { if (c.is && c.is("pro-load")) { var d = c.getAttribute("pro-load"), h = b["new"](); b.pending(1); e.http.to(d).on(200, function (b) { c.innerHTML = b.data; a(h); h.depth(c.children) }).on("end", function (a) { h.on("end", function () { c.out("pro-load"); f.out(a.status, { url: d, element: c }); 200 === a.status && f.out(d, c); b.pending(-1) }) }).get() } }) } var f = new e.core; e.load = f; a(e.tree) })(pro);
(function (e) {
    e.data = function (a) {
        function f(d) { if (0 === arguments.length) return a; a = d; b.out("raw", a); if ("object" === typeof a) { var h = function (c, d) { var g = f[d]; g ? g(c) : (f[d] = e.data(c), f[d].on(function (c) { a[d] = c; b.out("child", a) }, !0)) }; c = !1; if (a instanceof Array) for (a.forEach(h), h = a.length; f.hasOwnProperty[h];)delete f[h++]; else for (var l in a) a.hasOwnProperty(l) && h(a[l], l); c = !0 } } var b = new e.core, c = !0; f(a); f.on = function (a) { b.on.call(b, "raw", a) }; f.no = function (a) { b.no.call(b, "raw", a) }; f.once = function (a) {
            b.once.call(b,
                "raw", a)
        }; b.on("child", function (a) { c && b.out("raw", a) }); return f
    }
})(pro); (function (e) { var a = new e.core; a.name = function (f) { return function (b) { return { on: function (c) { a.on(f, function (a, f) { var d = b(); e.mvvm.to(d, e.data(a)); c.call(d, a); e.safe(f)(d) }) } } } }; e.view = a })(pro);
(function (e) { var a = new e.core; a.to = function (a, b) { var c = e.tree["new"](); c.on("node", function (a) { if (a.is && a.is("pro")) c.once("end", function () { b.on(function (b) { var c = "", d; for (d in b) c += "var " + d + "=" + JSON.stringify(b[d]) + ";"; e.mvvm.eval(a, c) }) }) }); c.depth([a]) }; a.eval = function () { var a; return function (b, c) { a = b; eval(c + a.getAttribute("pro")) } }(); e.mvvm = a })(pro);
(function (e) { e.time = {}; e.time.Countdown = function (a, e) { function b() { 0 <= a && (e(a), d = setTimeout(b, parseInt((c - new Date) / a)), a--) } var c = new Date - -1E3 * a, d; b(a); return { out: function () { clearTimeout(d) } } } })(pro);